"""Fixed relationships

Revision ID: ad8e60d64b8f
Revises: 
Create Date: 2025-04-29 14:59:22.865151

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ad8e60d64b8f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('condition', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_inventory_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_inventory_name'), ['name'], unique=False)

    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_location_name'), ['name'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('disposed_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=100), nullable=False),
    sa.Column('disposal_date', sa.Date(), nullable=False),
    sa.Column('disposed_by', sa.String(length=100), nullable=False),
    sa.Column('notes', sa.String(length=200), nullable=True),
    sa.CheckConstraint('quantity > 0', name='check_disposal_quantity_positive'),
    sa.ForeignKeyConstraint(['item_id'], ['inventory.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('disposed_item', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_disposed_item_disposal_date'), ['disposal_date'], unique=False)

    op.create_table('item_location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.CheckConstraint('quantity >= 0', name='check_quantity_non_negative'),
    sa.ForeignKeyConstraint(['item_id'], ['inventory.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('item_id', 'location_id', name='_item_location_uc')
    )
    op.create_table('movement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('from_location_id', sa.Integer(), nullable=True),
    sa.Column('to_location_id', sa.Integer(), nullable=True),
    sa.Column('movement_date', sa.DateTime(), nullable=False),
    sa.Column('responsible_person', sa.String(length=100), nullable=True),
    sa.CheckConstraint('quantity > 0', name='check_movement_quantity_positive'),
    sa.ForeignKeyConstraint(['from_location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['inventory.id'], ),
    sa.ForeignKeyConstraint(['to_location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('movement', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_movement_movement_date'), ['movement_date'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('movement', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_movement_movement_date'))

    op.drop_table('movement')
    op.drop_table('item_location')
    with op.batch_alter_table('disposed_item', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_disposed_item_disposal_date'))

    op.drop_table('disposed_item')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_location_name'))

    op.drop_table('location')
    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_inventory_name'))
        batch_op.drop_index(batch_op.f('ix_inventory_category'))

    op.drop_table('inventory')
    # ### end Alembic commands ###
